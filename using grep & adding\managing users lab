Tools of the Trade: Linux and SQL

+============================+
LAB: USING GREP
+============================+
Activity overview

Previously, you learned about tools that you can use to filter information in Linux. You’re also familiar with the basic commands to navigate the Linux file system by now.

In this lab activity, you’ll use the grep command and piping to search for files and to return specific information from files.

As a security analyst, it’s key to know how to find the information you need. The ability to search for specific strings can help you locate what you need more efficiently.
----------------------------
Scenario
In this scenario, you need to obtain information contained in server log and user data files. You also need to find files with specific names.

Here’s how you’ll do this: First, you’ll navigate to the logs directory and return the error messages in the server_logs.txt file. Next, you’ll navigate to the users directory and search for files that contain a specific string in their names. Finally, you’ll search for information contained in user files.

With that in mind, you’re ready to practice what you've learned.

Note: The lab starts with your user account, called analyst, already logged in to a Bash shell. This means you can start with the tasks as soon as you click the Start Lab button.
------------------------------

Task 1. Search for error messages in a log file

In this task, you must navigate to the /home/analyst/logs directory and report on the error messages in the server_logs.txt file. You’ll do this by using grep to search the file and output only the entries that are for errors.

Navigate to the /home/analyst/logs directory.
Use grep to filter the server_logs.txt file, and return all lines containing the text string error.
Note: If you enter a command incorrectly and it fails to return to the command-line prompt, you can press CTRL+C to stop the process and force the shell to return to the command-line prompt.

input:
>>cd /home/analyst/logs
>>grep "error" server_logs.txt

output:
2022-09-28 13:56:22 error   The password is incorrect
2022-09-28 15:56:22 error   The username is incorrect
2022-09-28 16:56:22 error   The password is incorrect
2022-09-29 13:56:22 error   An unexpected error occurred
2022-09-29 15:56:22 error   Unauthorized access
2022-09-29 16:56:22 error   Unauthorized access

How many error lines are there in the server_logs.txt file? 
ANSWER 6

Task 2. Find files containing specific strings
In this task, you must navigate to the /home/analyst/reports/users directory and use the correct Linux commands and arguments to search for user data files that contain a specific string in their names.

Navigate to the /home/analyst/reports/users directory.
Using the pipe character (|), pipe the output of the ls command to the grep command to list only the files containing the string Q1 in their names.

How many files in the /home/analyst/reports/users subdirectory contain “Q1” in their names?

input:
>> ls | grep "Q1"

output:
	Q1_access.txt
	Q1_added_users.txt
	Q1_deleted_users.txt

List the files that contain the word access in their names.

input:
>>ls | grep "access"
output:
	Q1_access.txt
	Q2_access.txt
	Q3_access.txt
	Q4_access.txt

Task 3. Search more file contents
In this task, you must search for information contained in user files and report on users that were added and deleted from the system.

Display the files in the /home/analyst/reports/users directory.

Search the Q2_deleted_users.txt file for the username jhill.

input: cat | grep "jhill" Q2_deleted_users.txt

output:
1025         jhill     Sales

Search the Q4_added_users.txt file to list the users who were added to the Human Resources department.

Note: In order for grep to interpret a string of two or more words correctly, you must enclose it in quotes ("Human Resources").

input:
>> cat | grep "Human Resources" Q4_added_users.txt

output:
1151         sshah     Human Resources
1145         msosa     Human Resources
+============================+

+============================+
LAB: Add and manage users with Linux commands
+============================+

Activity overview

Previously, you focused on authorization, the concept of granting access to specific resources in a system. Another important concept in security is authentication. Authentication is the process of a user proving that they are who they say they are in the system.

When managing this, security analysts need to ensure

not all users get access to the system,
new users (those who are new to the organization or a group) are added to the system, and
current users who change groups or leave the organization are deleted from the system.
In this lab activity, you’ll use the useradd, usermod, userdel, and chown commands to manage user access in the Linux Bash shell.

Important: You must use sudo at the beginning of all the commands you use in this lab. Adding or removing users and groups are tasks that require root (super user) privileges, and you’ll need to use sudo with the commands that are used to perform these tasks.

Scenario
In this scenario, a new employee with the username researcher9 joins an organization. You have to add them to the system and continue to manage their access during their time with the organization.

Here’s how you’ll do this task: First, you’ll add a new employee to the system and then to their primary group. Second, you’ll make this employee the owner of a file related to a particular project. Third, you’ll add the new employee to a supplementary group. Finally, you’ll delete the employee from the system.

Note: The lab starts with you logged in as user analyst, with your home directory, /home/analyst, as the current working directory.
OK, it’s time to get ready to practice managing user access in Linux!

Start your lab
Before you begin, you can review the instructions for using the Qwiklabs platform under the Resources tab in Coursera.

If you haven't already done so, click Start Lab. This brings up the terminal so that you can begin completing the tasks!

When you have completed all the tasks, refer to the End your Lab section that follows the tasks for information on how to end your lab.

Task 1. Add a new user
A new employee has joined the Research department. In this task, you must add them to the system. The username assigned to them is researcher9.

Write a command to add a user called researcher9 to the system.
Next, you need to add the new user to the research_team group.

Use the usermod command and -g option to add researcher9 to the research_team group as their primary group.


input:
>>sudo useradd researcher9
>>sudo usermod -g research_team researcher9


Task 2. Assign file ownership
The new employee, researcher9, will take responsibility for project_r. In this task, you must make them the owner of the project_r.txt file.

The project_r.txt file is located in the /home/researcher2/projects directory, and owned by the researcher2 user.

Use the chown command to make researcher9 the owner of /home/researcher2/projects/project_r.txt.
Click Check my progress to verify that you have completed this task correctly.

input:sudo chown researcher9 /home/researcher2/projects/project_r.txt

Task 3. Add the user to a secondary group
A couple of months later, this employee's role at the organization has changed, and they are working in both the Research and the Sales departments.

In this task, you must add researcher9 to a secondary group (sales_team). Their primary group is still research_team.

Use the usermod command with the -a and -G options to add researcher9 to the sales_team group as a secondary group.
Note: Options for Linux commands are case-sensitive, so make sure you use a lowercase -a and an uppercase -G.
Click Check my progress to verify that you have completed this task correctly.

input:
>>sudo usermod -aG sales_team researcher9

Task 4. Delete a user
A year later, researcher9, decided to leave the company. In this task, you must remove them from the system.

Run a command to delete researcher9 from the system:
sudo userdel researcher9
Copied!
This command will output the following message:

Userdel: Group researcher9 not removed because it is not the primary group of user researcher9.  
This is expected.

Note: When you create a new user in Linux, a group with the same name as the user is automatically created and the user is the only member of that group. After removing users, it is good practice to clean up any such empty groups that may remain behind.
Run the following command to delete the researcher9 group that is no longer required:
sudo groupdel researcher9
Copied!
Click Check my progress to verify that you have completed this task correctly.

